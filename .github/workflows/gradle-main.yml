name: Java CI - Main branch

on:
  push:
    branches:
      - 'main'

env:
  GITHUB_ACTIONS: true

jobs:
  build:
    timeout-minutes: 30
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ 'ubuntu-latest' ]
        java: [ '11' ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java }}
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Check licenses
        run: ./gradlew checkLicense
        if: always()

      - name: Integration Tests
        run: ./gradlew integrationTest --continue -PcacheChangingModulesDuration=PT0S

      - name: Unit tests
        run: ./gradlew test --continue -PcacheChangingModulesDuration=PT0S

      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v5
        if: always()
        with:
          report_paths: '**/build/test-results/*/TEST-*.xml'
          fail_on_failure: true
          summary: true

      - name: Report
        if: always()
        run: ./gradlew -DignoreUnitTestFailures=true -DignoreIntegrationTestFailures=true testReport --continue  -PcacheChangingModulesDuration=PT0S

      - name: Upload Tests report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: JUnit Report
          path: ./build/reports/tests/

      - name: Build
        run: ./gradlew build

      - name: Upload JARs
        uses: actions/upload-artifact@v4
        with:
          name: Jars
          path: |
            ./**/build/libs/*.jar
            !./**/build/libs/*-javadoc.jar

      - name: Prepare publishing configuration
        env:
          JRELEASER_CONFIGURATION: ${{secrets.JRELEASER_CONFIGURATION}}
        run: |
          mkdir -p $HOME/.jreleaser
          echo "$JRELEASER_CONFIGURATION" > $HOME/.jreleaser/config.yml ;

      - name: Publish artifacts
        run: ./gradlew publish jreleaserFullRelease
