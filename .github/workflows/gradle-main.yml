name: Java CI - Main branch

on:
  push:
    branches:
      - 'main'

env:
  GITHUB_ACTIONS: true

jobs:
  build:
    timeout-minutes: 30
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ 'ubuntu-latest' ]
        java: [ '11' ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v3

      - name: Check licenses
        run: ./gradlew checkLicense
        if: always()

      - name: Integration Tests
        run: ./gradlew integrationTest --continue -PcacheChangingModulesDuration=PT0S

      - name: Unit tests
        run: ./gradlew test --continue -PcacheChangingModulesDuration=PT0S

      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v5
        if: always()
        with:
          report_paths: '**/build/test-results/*/TEST-*.xml'
          fail_on_failure: true
          summary: true

      - name: Report
        if: always()
        run: ./gradlew -DignoreUnitTestFailures=true -DignoreIntegrationTestFailures=true testReport --continue  -PcacheChangingModulesDuration=PT0S

      - name: Upload Tests report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: JUnit Report
          path: ./build/reports/tests/

      - name: Build
        run: ./gradlew build

      - name: Upload JARs
        uses: actions/upload-artifact@v4
        with:
          name: Jars
          path: |
            ./**/build/libs/*.jar
            !./**/build/libs/*-javadoc.jar

      - name: Prepare signing configuration
        env:
          SIGNING_KEY_ID: ${{ secrets.SONATYPE_OSS_SIGNING_KEY_ID }}
          SIGNING_PASSWORD: ${{ secrets.SONATYPE_OSS_SIGNING_PASSWORD }}
          SIGNING_PRIVATE_KEY: ${{ secrets.SONATYPE_OSS_SIGNING_PRIVATE_KEY_BASE_64 }}
        run:
          echo "signing.keyId=$SIGNING_KEY_ID" >> $HOME/.gradle/gradle.properties ;
          echo "signing.password=$SIGNING_PASSWORD" >> $HOME/.gradle/gradle.properties ;
          echo "$SIGNING_PRIVATE_KEY" | base64 --decode > /tmp/privateKey.txt ;
          echo "signing.secretKeyRingFile=/tmp/privateKey.txt" >> $HOME/.gradle/gradle.properties

      - name: Prepare publishing configuration
        env:
          OSSRH_USERNAME: ${{secrets.SONATYPE_OSS_USERNAME}}
          OSSRH_PASSWORD: ${{secrets.SONATYPE_OSS_PASSWORD}}
        run:
          echo "ossrhUsername=$OSSRH_USERNAME" >> $HOME/.gradle/gradle.properties ;
          echo "ossrhPassword=$OSSRH_PASSWORD" >> $HOME/.gradle/gradle.properties ;

      - name: Publish artifacts
        run: ./gradlew publish --no-daemon
